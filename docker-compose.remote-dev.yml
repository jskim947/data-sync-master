services:
  # PostgreSQL 데이터베이스
  postgres:
    image: postgres:15
    container_name: fs_master_postgres_remote
    environment:
      POSTGRES_DB: fs_master_web
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: infomax
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_remote:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - fs_master_network_remote
    restart: unless-stopped

  # Redis (스케줄링 및 캐싱용)
  redis:
    image: redis:7-alpine
    container_name: fs_master_redis_remote
    ports:
      - "6379:6379"
    networks:
      - fs_master_network_remote
    restart: unless-stopped

  # FS Master 웹 애플리케이션 (원격 개발 모드 - 자동 반영)
  web:
    build: 
      context: .
      dockerfile: Dockerfile.remote-dev
    container_name: fs_master_web_remote
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - DATABASE_URL=postgresql://postgres:infomax@postgres:5432/fs_master_web
      - REDIS_URL=redis://redis:6379/0
    ports:
      - "5000:5000"
    volumes:
      # 코드 변경사항 즉시 반영을 위한 볼륨 마운트
      - ./app.py:/app/app.py
      - ./db_connection_test:/app/db_connection_test
      - ./templates:/app/templates
      - ./logs:/app/logs
      - ./jdbc-drivers:/app/jdbc-drivers
    depends_on:
      - postgres
      - redis
    networks:
      - fs_master_network_remote
    restart: unless-stopped
    command: python app.py --debug --host 0.0.0.0 --port 5000

volumes:
  postgres_data_remote:

networks:
  fs_master_network_remote:
    driver: bridge 